/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gato;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/**
 *
 * @author HbTO
 */
public class gameScreen extends javax.swing.JFrame implements ActionListener {
    MiBoton botones [][];
    
    String player1="", player2="";
    int filaBtn, columnaBtn;
    boolean ganador=false;
    
    
    
    public gameScreen() {
        initComponents();
        setLocationRelativeTo(null);
        
    }

    
    public void llenarPanel(){
        botones = new MiBoton[3][3];
        
        for(int i=0; i<botones.length; i++){
            for(int j=0; j<botones.length; j++){
                botones[i][j]= new MiBoton();
               botones[i][j].setBounds(j*(400/3), i*(400/3), 400/3, 400/3);
              // botones[i][j].setContentAreaFilled(false);
               botones[i][j].setBorder(javax.swing.BorderFactory.createEtchedBorder());
                botones[i][j].addActionListener(this);
                pnlBotones.add(botones[i][j]);
            }
        }
        pnlBotones.repaint();
        
        
    }
    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBotones = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lTurn = new javax.swing.JLabel();
        btnReset = new javax.swing.JButton();
        lWin = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        backMenu = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlBotones.setLayout(new java.awt.GridLayout(3, 3));

        jLabel1.setText("Turn:");

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        lWin.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        lWin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        backMenu.setText("Back <-");
        backMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backMenuMouseClicked(evt);
            }
        });
        jMenuBar1.add(backMenu);

        jMenu2.setText("About");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(lTurn, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(btnReset))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(pnlBotones, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(100, Short.MAX_VALUE))
            .addComponent(lWin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(lTurn, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnReset)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlBotones, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(lWin, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        int reset = JOptionPane.showConfirmDialog(null,"Are you sure?.\nThe progress will be lost.","¿Do you want to reset the game?", JOptionPane.YES_NO_OPTION);
    
            if(reset==0){
            lWin.setText("");
            lWin.repaint();
            pnlBotones.removeAll();
            llenarPanel();
            ganador=true;
            }else{
                
                //No hacemos nada continuamos :D
            } 
        
    }//GEN-LAST:event_btnResetActionPerformed

    private void backMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMenuMouseClicked
        int salir = JOptionPane.showConfirmDialog(null,"Are you sure?.\nThe progress will be lost.","¿Do you want to leave?", JOptionPane.YES_NO_OPTION);
    
            if(salir==0){
             // Upps se quiere ir...
                
                mainMenu obj = new mainMenu();
                obj.setVisible(true);
                setVisible(false);
            }else{
               
                //No hacemos nada continuamos :D
            } 
    }//GEN-LAST:event_backMenuMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new gameScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu backMenu;
    private javax.swing.JButton btnReset;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    public static javax.swing.JLabel lTurn;
    private javax.swing.JLabel lWin;
    private javax.swing.JPanel pnlBotones;
    // End of variables declaration//GEN-END:variables

    
    public void verificar() {
        
        
      //examina si un jugador a ganado
            int lineaV1, lineaV2, lineaV3, lineaH1, lineaH2, lineaH3;
            //recuperar valores
            int btn00 = botones[0][0].tipo;
            int btn01 = botones[0][1].tipo;
            int btn02 = botones[0][2].tipo;
            
            int btn10 = botones[1][0].tipo;
            int btn11 = botones[1][1].tipo;
            int btn12 = botones[1][2].tipo;
            
            int btn20 = botones[2][0].tipo;
            int btn21 = botones[2][1].tipo;
            int btn22 = botones[2][2].tipo;
            
           
             lineaV1=btn00+btn01+btn02;
            lineaV2=btn10+btn11+btn12;
            lineaV3=btn20+btn21+btn22;
            
            lineaH1=btn00+btn10+btn20;
            lineaH2=btn01+btn11+btn21;
            lineaH3=btn02+btn12+btn22;
            
            System.out.println("*"+lineaH1+"*");
            System.out.println("*"+lineaH2+"*");
            System.out.println("*"+lineaH3+"*");
        //Horizontales!   
        if(lineaH1.equals("3")){
            lWin.setText("1 "+player1+" WIN!");
            pnlBotones.setEnabled(false);
            ganador=false;
        }
        
        if(lineaH1.equals("      ")){
            lWin.setText(" 1"+player2+" WIN!");
            ganador=false;
        }
        
        if(lineaH2.equals("   ")){
            lWin.setText("2 "+player1+" WIN!");
            ganador=false;
        }
        
        if(lineaH2.equals("      ")){
            lWin.setText(" 2"+player2+" WIN!");
            ganador=false;
        }
        if(lineaH3.equals("   ")){
            lWin.setText(" 3"+player1+" WIN!");
            ganador=false;
        }
        
        if(lineaH3.equals("      ")){
            lWin.setText("3 "+player2+" WIN!");
            ganador=false;
        }
        
        
        //Verticales!   
        if(lineaV1.equals("   ")){
            lWin.setText(" "+player1+" WIN!");
            pnlBotones.setEnabled(false);
            ganador=false;
        }
        
        if(lineaV1.equals("      ")){
            lWin.setText(" "+player2+" WIN!");
            ganador=false;
        }
        
        if(lineaV2.equals("   ")){
            lWin.setText(" "+player1+" WIN!");
            ganador=false;
        }
        
        if(lineaV2.equals("      ")){
            lWin.setText(" "+player2+" WIN!");
            ganador=false;
        }
        if(lineaV3.equals("   ")){
            lWin.setText(" "+player1+" WIN!");
            ganador=false;
        }
        
        if(lineaV3.equals("      ")){
            lWin.setText(" "+player2+" WIN!");
            ganador=false;
        }
        
     
    }

    @Override
    public void actionPerformed(ActionEvent e) {
       
        String contenido, playerTurn = lTurn.getText();
        MiBoton botones = (MiBoton)e.getSource();
        contenido = botones.getText();
        
        for(int i =0; i<this.botones.length; i++){
            for(int j=0; j<this.botones.length; j++){
                if(botones == this.botones[i][j]){
                    filaBtn=i;
                    columnaBtn=j;
                    System.out.println(i+"=="+j);
                }
            }
        }
        
        
        //verifica si es player1
        if(playerTurn.equals(player1)){
            //System.out.println("aqui"+player1);
            if(contenido.equals("")){
               botones.setIcon(new ImageIcon(getClass().getResource("../images/player1.png")));
               botones.tipo=1;
               verificar();
               lTurn.setText(player2);
            }
        }
        
        
        //Verifica si es palyer2
        if(playerTurn.equals(player2)){
            //System.out.println("aqui"+player2);
            if(contenido.equals("")){
                botones.setIcon(new ImageIcon(getClass().getResource("../images/player2.png")));
                botones.tipo=2;
                lTurn.setText(player1);
            }
        }
        
    }
    
}
